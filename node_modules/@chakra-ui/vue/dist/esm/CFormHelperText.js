
/*
 * ! @chakra-ui/vue v0.12.0 by Jonathan Bakebwa @codebender828
 * MIT License
 * https://github.com/chakra-ui/chakra-ui-vue
 */

import { R as createStyledAttrsMixin } from './index-2557a15f.js';
import './chakra-ui-styled-system.esm-36097b89.js';
import '@emotion/css';
import 'vue';
import './color-mode-observer-d3e4ca7f.js';

/**
 * Hey! Welcome to @chakra-ui/vue CFormHelperText
 *
 * Used to display helpful hints to the use on how to
 * use an input.
 *
 * @see Docs     https://vue.chakra-ui.com/formcontrol
 * @see Source   https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CFormHelperText/CFormHelperText.js
 * @see WAI      https://www.w3.org/WAI/tutorials/forms/
 */
/**
 * CFormHelperText component
 *
 * Used to display helpful hints to the use on how to
 * use an input.
 *
 * @extends CText
 * @see Docs https://vue.chakra-ui.com/formcontrol
 */

var CFormHelperText = {
  name: 'CFormHelperText',
  mixins: [createStyledAttrsMixin('CFormHelperText')],
  inject: ['$useFormControl'],
  computed: {
    formControl: function formControl() {
      return this.$useFormControl(this.$props);
    },
    componentStyles: function componentStyles() {
      var color = {
        light: 'gray.500',
        dark: 'whiteAlpha.600'
      };
      return {
        mt: 2,
        color: color[this.colorMode],
        lineHeight: 'normal',
        fontSize: 'sm'
      };
    }
  },
  render: function render(h) {
    return h('p', {
      class: [this.className],
      attrs: Object.assign({}, {
        id: this.formControl.id ? this.formControl.id + "-help-text" : null
      }, this.computedAttrs),
      on: this.computedListeners
    }, this.$slots.default);
  }
};

export default CFormHelperText;
