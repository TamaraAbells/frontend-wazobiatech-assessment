{"ast":null,"code":"import { createStore, bindActionCreators } from 'redux';\nexport const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const RESET = 'RESET';\nexport function counter(state = 0, action) {\n  switch (action.type) {\n    case INCREMENT:\n      console.log('ACTION', action);\n      return state + 1;\n\n    case DECREMENT:\n      return state - 1;\n\n    case RESET:\n      return 0;\n\n    default:\n      return state;\n  }\n}\nexport const store = createStore(counter);","map":{"version":3,"names":["createStore","bindActionCreators","INCREMENT","DECREMENT","RESET","counter","state","action","type","console","log","store"],"sources":["/Users/user/Documents/GitHub/frontend-eng-assessment/src/redux/providers/store/count.js"],"sourcesContent":["import {createStore, bindActionCreators} from 'redux'\n\nexport const INCREMENT = 'INCREMENT'\nexport const DECREMENT = 'DECREMENT'\nexport const RESET = 'RESET'\n\nexport function counter(state = 0, action) {\n  switch (action.type) {\n    case INCREMENT:\n        console.log('ACTION', action)\n      return state + 1\n    case DECREMENT:\n      return state - 1\n    case RESET:\n      return 0\n    default:\n      return state\n  }\n}\n\nexport const store = createStore(counter)"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,kBAArB,QAA8C,OAA9C;AAEA,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,KAAK,GAAG,OAAd;AAEP,OAAO,SAASC,OAAT,CAAiBC,KAAK,GAAG,CAAzB,EAA4BC,MAA5B,EAAoC;EACzC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKN,SAAL;MACIO,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;MACF,OAAOD,KAAK,GAAG,CAAf;;IACF,KAAKH,SAAL;MACE,OAAOG,KAAK,GAAG,CAAf;;IACF,KAAKF,KAAL;MACE,OAAO,CAAP;;IACF;MACE,OAAOE,KAAP;EATJ;AAWD;AAED,OAAO,MAAMK,KAAK,GAAGX,WAAW,CAACK,OAAD,CAAzB"},"metadata":{},"sourceType":"module"}