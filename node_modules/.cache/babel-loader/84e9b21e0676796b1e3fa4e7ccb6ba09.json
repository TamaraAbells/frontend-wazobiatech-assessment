{"ast":null,"code":"/*\n * ! @chakra-ui/vue v0.12.0 by Jonathan Bakebwa @codebender828\n * MIT License\n * https://github.com/chakra-ui/chakra-ui-vue\n */\nimport { R as createStyledAttrsMixin, J as useId, u as useVariantColorWarning } from './index-2557a15f.js';\nimport './chakra-ui-styled-system.esm-36097b89.js';\nimport './internal-icons-b207e00d.js';\nimport '@emotion/css';\nimport 'vue';\nimport './color-mode-observer-d3e4ca7f.js';\nimport CBox from './CBox.js';\nimport { C as CIcon } from './index-55a27cde.js';\nimport { S as StringArray, b as StringNumber } from './props.types-dc7c9add.js';\nimport CVisuallyHidden from './CVisuallyHidden.js';\nimport CControlBox from './CControlBox.js';\nimport { u as useCheckboxStyle } from './checkbox.styles-b7a889b2.js';\n/**\n * Hey! Welcome to @chakra-ui/vue Checkbox\n *\n * CCheckbox component is used in forms when a user needs to select multiple values from several options.\n *\n * @see Docs     https://vue.chakra-ui.com/checkbox\n * @see Source   https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCheckbox/CCheckbox.js\n * @see A11y     https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCheckbox/accessibility.md\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#button\n */\n\n/**\n * CCheckbox component\n *\n * Checkbox component is used in forms when a user needs to select multiple values from several options.\n *\n * @extends CBox\n * @see Docs https://vue.chakra-ui.com/checkbox\n */\n\nvar CCheckbox = {\n  name: 'CCheckbox',\n  mixins: [createStyledAttrsMixin('CCheckbox')],\n  model: {\n    prop: 'isChecked',\n    event: 'change'\n  },\n  props: {\n    id: String,\n    name: String,\n    value: [String, Boolean],\n    ariaLabel: String,\n    ariaLabelledBy: String,\n    variantColor: {\n      type: String,\n      default: 'blue'\n    },\n    defaultIsChecked: Boolean,\n    isChecked: {\n      type: Boolean,\n      default: false\n    },\n    isFullWidth: Boolean,\n    size: {\n      type: String,\n      default: 'md'\n    },\n    isDisabled: Boolean,\n    isInvalid: Boolean,\n    isReadOnly: Boolean,\n    isIndeterminate: Boolean,\n    iconColor: StringArray,\n    iconSize: {\n      type: StringNumber,\n      default: '10px'\n    }\n  },\n  computed: {\n    checkBoxStyles: function checkBoxStyles() {\n      return useCheckboxStyle({\n        color: this.variantColor,\n        size: this.size,\n        colorMode: this.colorMode\n      });\n    },\n    componentStyles: function componentStyles() {\n      return {\n        display: 'inline-flex',\n        verticalAlign: 'top',\n        alignItems: 'center',\n        width: this.isFullWidth ? 'full' : undefined,\n        cursor: this.isDisabled ? 'not-allowed' : 'pointer'\n      };\n    },\n    _id: function _id() {\n      return this.id || \"checkbox-\" + useId(4);\n    }\n  },\n  created: function created() {\n    // Ensure that the use of the variantColor props is consistent with theme.\n    useVariantColorWarning(this.theme, 'Checkbox', this.variantColor);\n  },\n  methods: {\n    handleChange: function handleChange(e) {\n      this.$emit('change', !this.isChecked, e);\n    }\n  },\n  render: function render(h) {\n    var children = this.$slots.default;\n    return h('label', {\n      class: this.className,\n      attrs: Object.assign({}, {\n        for: this._id\n      }, this.computedAttrs)\n    }, [h(CVisuallyHidden, {\n      props: {\n        as: 'input'\n      },\n      domProps: {\n        value: this.value,\n        defaultChecked: this.isReadOnly ? undefined : this.defaultIsChecked,\n        checked: this.isReadOnly ? this.isChecked : this.defaultIsChecked ? undefined : this.isChecked\n      },\n      attrs: {\n        name: this.name,\n        type: 'checkbox',\n        id: this._id,\n        'aria-label': this.ariaLabel,\n        'aria-labelledby': this.ariaLabelledBy,\n        disabled: this.isDisabled,\n        readOnly: this.isReadOnly,\n        'aria-readonly': this.isReadOnly,\n        'aria-invalid': this.isInvalid,\n        'aria-checked': this.isIndeterminate ? 'mixed' : this.isChecked\n      },\n      on: {\n        change: this.isReadOnly ? undefined : this.handleChange\n      }\n    }), h(CControlBox, {\n      attrs: Object.assign({}, {\n        opacity: this.isReadOnly ? 0.8 : 1\n      }, this.checkBoxStyles)\n    }, [h(CIcon, {\n      props: {\n        name: this.isIndeterminate ? 'minus' : 'check',\n        size: this.iconSize,\n        color: this.iconColor,\n        transition: 'transform 240ms, opacity 240ms'\n      }\n    })]), children && h(CBox, {\n      attrs: {\n        ml: 2,\n        fontSize: this.size,\n        fontFamily: 'body',\n        userSelect: 'none',\n        opacity: this.isDisabled ? 0.4 : 1\n      }\n    }, children)]);\n  }\n};\nexport default CCheckbox;","map":{"version":3,"names":["R","createStyledAttrsMixin","J","useId","u","useVariantColorWarning","CBox","C","CIcon","S","StringArray","b","StringNumber","CVisuallyHidden","CControlBox","useCheckboxStyle","CCheckbox","name","mixins","model","prop","event","props","id","String","value","Boolean","ariaLabel","ariaLabelledBy","variantColor","type","default","defaultIsChecked","isChecked","isFullWidth","size","isDisabled","isInvalid","isReadOnly","isIndeterminate","iconColor","iconSize","computed","checkBoxStyles","color","colorMode","componentStyles","display","verticalAlign","alignItems","width","undefined","cursor","_id","created","theme","methods","handleChange","e","$emit","render","h","children","$slots","class","className","attrs","Object","assign","for","computedAttrs","as","domProps","defaultChecked","checked","disabled","readOnly","on","change","opacity","transition","ml","fontSize","fontFamily","userSelect"],"sources":["/Users/user/Documents/GitHub/frontend-eng-assessment/node_modules/@chakra-ui/vue/dist/esm/CCheckbox.js"],"sourcesContent":["\n/*\n * ! @chakra-ui/vue v0.12.0 by Jonathan Bakebwa @codebender828\n * MIT License\n * https://github.com/chakra-ui/chakra-ui-vue\n */\n\nimport { R as createStyledAttrsMixin, J as useId, u as useVariantColorWarning } from './index-2557a15f.js';\nimport './chakra-ui-styled-system.esm-36097b89.js';\nimport './internal-icons-b207e00d.js';\nimport '@emotion/css';\nimport 'vue';\nimport './color-mode-observer-d3e4ca7f.js';\nimport CBox from './CBox.js';\nimport { C as CIcon } from './index-55a27cde.js';\nimport { S as StringArray, b as StringNumber } from './props.types-dc7c9add.js';\nimport CVisuallyHidden from './CVisuallyHidden.js';\nimport CControlBox from './CControlBox.js';\nimport { u as useCheckboxStyle } from './checkbox.styles-b7a889b2.js';\n\n/**\n * Hey! Welcome to @chakra-ui/vue Checkbox\n *\n * CCheckbox component is used in forms when a user needs to select multiple values from several options.\n *\n * @see Docs     https://vue.chakra-ui.com/checkbox\n * @see Source   https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCheckbox/CCheckbox.js\n * @see A11y     https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCheckbox/accessibility.md\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#button\n */\n/**\n * CCheckbox component\n *\n * Checkbox component is used in forms when a user needs to select multiple values from several options.\n *\n * @extends CBox\n * @see Docs https://vue.chakra-ui.com/checkbox\n */\n\nvar CCheckbox = {\n  name: 'CCheckbox',\n  mixins: [createStyledAttrsMixin('CCheckbox')],\n  model: {\n    prop: 'isChecked',\n    event: 'change'\n  },\n  props: {\n    id: String,\n    name: String,\n    value: [String, Boolean],\n    ariaLabel: String,\n    ariaLabelledBy: String,\n    variantColor: {\n      type: String,\n      default: 'blue'\n    },\n    defaultIsChecked: Boolean,\n    isChecked: {\n      type: Boolean,\n      default: false\n    },\n    isFullWidth: Boolean,\n    size: {\n      type: String,\n      default: 'md'\n    },\n    isDisabled: Boolean,\n    isInvalid: Boolean,\n    isReadOnly: Boolean,\n    isIndeterminate: Boolean,\n    iconColor: StringArray,\n    iconSize: {\n      type: StringNumber,\n      default: '10px'\n    }\n  },\n  computed: {\n    checkBoxStyles: function checkBoxStyles() {\n      return useCheckboxStyle({\n        color: this.variantColor,\n        size: this.size,\n        colorMode: this.colorMode\n      });\n    },\n    componentStyles: function componentStyles() {\n      return {\n        display: 'inline-flex',\n        verticalAlign: 'top',\n        alignItems: 'center',\n        width: this.isFullWidth ? 'full' : undefined,\n        cursor: this.isDisabled ? 'not-allowed' : 'pointer'\n      };\n    },\n    _id: function _id() {\n      return this.id || \"checkbox-\" + useId(4);\n    }\n  },\n  created: function created() {\n    // Ensure that the use of the variantColor props is consistent with theme.\n    useVariantColorWarning(this.theme, 'Checkbox', this.variantColor);\n  },\n  methods: {\n    handleChange: function handleChange(e) {\n      this.$emit('change', !this.isChecked, e);\n    }\n  },\n  render: function render(h) {\n    var children = this.$slots.default;\n    return h('label', {\n      class: this.className,\n      attrs: Object.assign({}, {\n        for: this._id\n      }, this.computedAttrs)\n    }, [h(CVisuallyHidden, {\n      props: {\n        as: 'input'\n      },\n      domProps: {\n        value: this.value,\n        defaultChecked: this.isReadOnly ? undefined : this.defaultIsChecked,\n        checked: this.isReadOnly ? this.isChecked : this.defaultIsChecked ? undefined : this.isChecked\n      },\n      attrs: {\n        name: this.name,\n        type: 'checkbox',\n        id: this._id,\n        'aria-label': this.ariaLabel,\n        'aria-labelledby': this.ariaLabelledBy,\n        disabled: this.isDisabled,\n        readOnly: this.isReadOnly,\n        'aria-readonly': this.isReadOnly,\n        'aria-invalid': this.isInvalid,\n        'aria-checked': this.isIndeterminate ? 'mixed' : this.isChecked\n      },\n      on: {\n        change: this.isReadOnly ? undefined : this.handleChange\n      }\n    }), h(CControlBox, {\n      attrs: Object.assign({}, {\n        opacity: this.isReadOnly ? 0.8 : 1\n      }, this.checkBoxStyles)\n    }, [h(CIcon, {\n      props: {\n        name: this.isIndeterminate ? 'minus' : 'check',\n        size: this.iconSize,\n        color: this.iconColor,\n        transition: 'transform 240ms, opacity 240ms'\n      }\n    })]), children && h(CBox, {\n      attrs: {\n        ml: 2,\n        fontSize: this.size,\n        fontFamily: 'body',\n        userSelect: 'none',\n        opacity: this.isDisabled ? 0.4 : 1\n      }\n    }, children)]);\n  }\n};\n\nexport default CCheckbox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}