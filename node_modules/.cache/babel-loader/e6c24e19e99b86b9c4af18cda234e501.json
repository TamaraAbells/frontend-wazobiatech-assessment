{"ast":null,"code":"import { INCREMENT, DECREMENT, RESET } from '../actions/types';\nconst initialState = {\n  counter: 0\n};\nexport function counter(state = initialState, action) {\n  switch (action.type) {\n    case INCREMENT:\n      console.log('stateSTATE', state);\n      return { ...state,\n        counter: state.counter + 1\n      };\n\n    case DECREMENT:\n      return state - 1;\n\n    case RESET:\n      return 0;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["INCREMENT","DECREMENT","RESET","initialState","counter","state","action","type","console","log"],"sources":["/Users/user/Documents/GitHub/frontend-eng-assessment/src/redux/reducers/Counter.js"],"sourcesContent":["import {INCREMENT, DECREMENT, RESET} from '../actions/types'\n\nconst initialState = {\n  counter: 0\n}\n\nexport function counter(state = initialState, action) {\n  switch (action.type) {\n    case INCREMENT:\n        console.log('stateSTATE', state)\n      return {...state, counter: state.counter + 1}\n    case DECREMENT:\n      return state - 1\n    case RESET:\n      return 0\n    default:\n      return state\n  }\n}\n"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,SAAnB,EAA8BC,KAA9B,QAA0C,kBAA1C;AAEA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE;AADU,CAArB;AAIA,OAAO,SAASA,OAAT,CAAiBC,KAAK,GAAGF,YAAzB,EAAuCG,MAAvC,EAA+C;EACpD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKP,SAAL;MACIQ,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,KAA1B;MACF,OAAO,EAAC,GAAGA,KAAJ;QAAWD,OAAO,EAAEC,KAAK,CAACD,OAAN,GAAgB;MAApC,CAAP;;IACF,KAAKH,SAAL;MACE,OAAOI,KAAK,GAAG,CAAf;;IACF,KAAKH,KAAL;MACE,OAAO,CAAP;;IACF;MACE,OAAOG,KAAP;EATJ;AAWD"},"metadata":{},"sourceType":"module"}