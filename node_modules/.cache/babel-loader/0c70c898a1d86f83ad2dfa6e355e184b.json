{"ast":null,"code":"/*\n * ! @chakra-ui/vue v0.12.0 by Jonathan Bakebwa @codebender828\n * MIT License\n * https://github.com/chakra-ui/chakra-ui-vue\n */\nimport { a as pickProperty } from './index-2557a15f.js';\nimport './chakra-ui-styled-system.esm-36097b89.js';\nimport '@emotion/css';\nimport 'vue';\nimport './color-mode-observer-d3e4ca7f.js';\nimport './props.types-dc7c9add.js';\nimport { a as avatarSizes } from './avatar.styles-8b001767.js';\nimport { f as flexProps, C as CFlex } from './index-3af8f927.js';\n/**\n * Hey! Welcome to @chakra-ui/vue AvatarGroup\n *\n * The AvatarGroup component serves a wrapper that stacks multiple Avatars together.\n *\n * @see Docs     https://vue.chakra-ui.com/avatar\n * @see Source   https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CAvatarGroup/CAvatarGroup.js\n */\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n/**\n * CMoreAvatarLabel component\n *\n * For excess avatars, the CMoreAvatarLabel displays an indicator of the surplus avatars\n *\n * @extends CFlex\n * @see Docs https://vue.chakra-ui.com/avatar\n */\n\n\nvar CMoreAvatarLabel = {\n  name: 'CMoreAvatarLabel',\n  functional: true,\n  inject: ['$chakraColorMode', '$chakraTheme'],\n  props: Object.assign({}, {\n    size: [String, Array],\n    label: String\n  }, flexProps),\n  render: function render(h, ref) {\n    var injections = ref.injections;\n    var props = ref.props;\n    var data = ref.data;\n    var rest$1 = objectWithoutProperties(ref, [\"injections\", \"props\", \"data\"]);\n    var rest = rest$1;\n    var size = props.size;\n    var label = props.label;\n    var rest$2 = objectWithoutProperties(props, [\"size\", \"label\"]);\n    var avatarProps = rest$2;\n    var colorMode = injections.$chakraColorMode();\n    var theme = injections.$chakraTheme();\n    var borderColor = {\n      light: '#fff',\n      dark: 'gray.800'\n    };\n    var bg = {\n      light: 'gray.200',\n      dark: 'whiteAlpha.400'\n    };\n    var sizeKey = avatarSizes[size];\n    var _size = theme.sizes[sizeKey];\n    var fontSize = \"calc(\" + _size + \" / 2.75)\";\n    return h(CFlex, Object.assign({}, rest, {\n      props: pickProperty(avatarProps),\n      attrs: Object.assign({}, {\n        align: 'center',\n        justify: 'center',\n        h: avatarSizes[size],\n        w: avatarSizes[size],\n        bg: bg[colorMode],\n        color: 'inherit',\n        rounded: 'full',\n        border: '2px',\n        borderColor: borderColor[colorMode],\n        fontSize: fontSize\n      }, data.attrs, {\n        'data-chakra-component': 'CMoreAvatarLabel'\n      })\n    }), label);\n  }\n};\n/**\n * CAvatarGroup component\n *\n * Clones all CAvatar children and stacks them together.\n *\n * @extends CFlex\n * @see Docs https://vue.chakra-ui.com/avatar\n */\n\nvar CAvatarGroup = {\n  name: 'CAvatarGroup',\n  functional: true,\n  props: Object.assign({}, {\n    groupSize: {\n      type: [Number, String, Array],\n      default: 'md'\n    },\n    borderColor: [String, Array],\n    max: [Number, String, Array],\n    spacing: {\n      type: [Number, String, Array],\n      default: -3\n    }\n  }, flexProps),\n  render: function render(h, ref) {\n    var slots = ref.slots;\n    var props = ref.props;\n    var data = ref.data;\n    var rest$1 = objectWithoutProperties(ref, [\"slots\", \"props\", \"data\"]);\n    var rest = rest$1; // Get the number of slot nodes inside AvatarGroup\n\n    var children = slots().default.filter(function (e) {\n      return e.tag;\n    });\n    var count = children.length;\n    var max = parseInt(props.max, 10); // Apply styles to slot VNodes.\n\n    var clones = children.map(function (node, index) {\n      var isFirstAvatar = index === 0;\n\n      if (!props.max || max && index < max) {\n        // Change VNode component options\n        var ref = node.data;\n        var attrs = ref.attrs;\n        attrs.ml = isFirstAvatar ? 0 : props.spacing;\n        attrs.borderColor = props.borderColor || attrs.borderColor;\n        attrs.zIndex = count - index;\n        var propsData = node.componentOptions;\n        propsData.size = props.groupSize;\n        propsData.showBorder = true;\n        node.componentOptions.propsData = Object.assign({}, node.componentOptions.propsData, propsData);\n        node.data.attrs = Object.assign({}, node.data.attrs, attrs);\n        return node;\n      }\n\n      if (max && index === max) {\n        return h(CMoreAvatarLabel, {\n          props: {\n            size: props.groupSize,\n            label: \"+\" + (count - max)\n          },\n          attrs: {\n            ml: props.spacing\n          }\n        });\n      }\n    });\n    return h(CFlex, Object.assign({}, rest, {\n      props: Object.assign({}, {\n        alignItems: 'center'\n      }, pickProperty(props)),\n      attrs: Object.assign({}, {\n        zIndex: 0\n      }, data.attrs, {\n        'data-chakra-component': 'CAvatarGroup'\n      })\n    }), clones);\n  }\n};\nexport default CAvatarGroup;","map":{"version":3,"names":["a","pickProperty","avatarSizes","f","flexProps","C","CFlex","objectWithoutProperties","obj","exclude","target","k","Object","prototype","hasOwnProperty","call","indexOf","CMoreAvatarLabel","name","functional","inject","props","assign","size","String","Array","label","render","h","ref","injections","data","rest$1","rest","rest$2","avatarProps","colorMode","$chakraColorMode","theme","$chakraTheme","borderColor","light","dark","bg","sizeKey","_size","sizes","fontSize","attrs","align","justify","w","color","rounded","border","CAvatarGroup","groupSize","type","Number","default","max","spacing","slots","children","filter","e","tag","count","length","parseInt","clones","map","node","index","isFirstAvatar","ml","zIndex","propsData","componentOptions","showBorder","alignItems"],"sources":["/Users/user/Documents/GitHub/frontend-eng-assessment/node_modules/@chakra-ui/vue/dist/esm/CAvatarGroup.js"],"sourcesContent":["\n/*\n * ! @chakra-ui/vue v0.12.0 by Jonathan Bakebwa @codebender828\n * MIT License\n * https://github.com/chakra-ui/chakra-ui-vue\n */\n\nimport { a as pickProperty } from './index-2557a15f.js';\nimport './chakra-ui-styled-system.esm-36097b89.js';\nimport '@emotion/css';\nimport 'vue';\nimport './color-mode-observer-d3e4ca7f.js';\nimport './props.types-dc7c9add.js';\nimport { a as avatarSizes } from './avatar.styles-8b001767.js';\nimport { f as flexProps, C as CFlex } from './index-3af8f927.js';\n\n/**\n * Hey! Welcome to @chakra-ui/vue AvatarGroup\n *\n * The AvatarGroup component serves a wrapper that stacks multiple Avatars together.\n *\n * @see Docs     https://vue.chakra-ui.com/avatar\n * @see Source   https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CAvatarGroup/CAvatarGroup.js\n */\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n/**\n * CMoreAvatarLabel component\n *\n * For excess avatars, the CMoreAvatarLabel displays an indicator of the surplus avatars\n *\n * @extends CFlex\n * @see Docs https://vue.chakra-ui.com/avatar\n */\n\nvar CMoreAvatarLabel = {\n  name: 'CMoreAvatarLabel',\n  functional: true,\n  inject: ['$chakraColorMode', '$chakraTheme'],\n  props: Object.assign({}, {\n    size: [String, Array],\n    label: String\n  }, flexProps),\n  render: function render(h, ref) {\n    var injections = ref.injections;\n    var props = ref.props;\n    var data = ref.data;\n    var rest$1 = objectWithoutProperties(ref, [\"injections\", \"props\", \"data\"]);\n    var rest = rest$1;\n    var size = props.size;\n    var label = props.label;\n    var rest$2 = objectWithoutProperties(props, [\"size\", \"label\"]);\n    var avatarProps = rest$2;\n    var colorMode = injections.$chakraColorMode();\n    var theme = injections.$chakraTheme();\n    var borderColor = {\n      light: '#fff',\n      dark: 'gray.800'\n    };\n    var bg = {\n      light: 'gray.200',\n      dark: 'whiteAlpha.400'\n    };\n    var sizeKey = avatarSizes[size];\n    var _size = theme.sizes[sizeKey];\n    var fontSize = \"calc(\" + _size + \" / 2.75)\";\n    return h(CFlex, Object.assign({}, rest, {\n      props: pickProperty(avatarProps),\n      attrs: Object.assign({}, {\n        align: 'center',\n        justify: 'center',\n        h: avatarSizes[size],\n        w: avatarSizes[size],\n        bg: bg[colorMode],\n        color: 'inherit',\n        rounded: 'full',\n        border: '2px',\n        borderColor: borderColor[colorMode],\n        fontSize: fontSize\n      }, data.attrs, {\n        'data-chakra-component': 'CMoreAvatarLabel'\n      })\n    }), label);\n  }\n};\n/**\n * CAvatarGroup component\n *\n * Clones all CAvatar children and stacks them together.\n *\n * @extends CFlex\n * @see Docs https://vue.chakra-ui.com/avatar\n */\n\nvar CAvatarGroup = {\n  name: 'CAvatarGroup',\n  functional: true,\n  props: Object.assign({}, {\n    groupSize: {\n      type: [Number, String, Array],\n      default: 'md'\n    },\n    borderColor: [String, Array],\n    max: [Number, String, Array],\n    spacing: {\n      type: [Number, String, Array],\n      default: -3\n    }\n  }, flexProps),\n  render: function render(h, ref) {\n    var slots = ref.slots;\n    var props = ref.props;\n    var data = ref.data;\n    var rest$1 = objectWithoutProperties(ref, [\"slots\", \"props\", \"data\"]);\n    var rest = rest$1; // Get the number of slot nodes inside AvatarGroup\n\n    var children = slots().default.filter(function (e) {\n      return e.tag;\n    });\n    var count = children.length;\n    var max = parseInt(props.max, 10); // Apply styles to slot VNodes.\n\n    var clones = children.map(function (node, index) {\n      var isFirstAvatar = index === 0;\n\n      if (!props.max || max && index < max) {\n        // Change VNode component options\n        var ref = node.data;\n        var attrs = ref.attrs;\n        attrs.ml = isFirstAvatar ? 0 : props.spacing;\n        attrs.borderColor = props.borderColor || attrs.borderColor;\n        attrs.zIndex = count - index;\n        var propsData = node.componentOptions;\n        propsData.size = props.groupSize;\n        propsData.showBorder = true;\n        node.componentOptions.propsData = Object.assign({}, node.componentOptions.propsData, propsData);\n        node.data.attrs = Object.assign({}, node.data.attrs, attrs);\n        return node;\n      }\n\n      if (max && index === max) {\n        return h(CMoreAvatarLabel, {\n          props: {\n            size: props.groupSize,\n            label: \"+\" + (count - max)\n          },\n          attrs: {\n            ml: props.spacing\n          }\n        });\n      }\n    });\n    return h(CFlex, Object.assign({}, rest, {\n      props: Object.assign({}, {\n        alignItems: 'center'\n      }, pickProperty(props)),\n      attrs: Object.assign({}, {\n        zIndex: 0\n      }, data.attrs, {\n        'data-chakra-component': 'CAvatarGroup'\n      })\n    }), clones);\n  }\n};\n\nexport default CAvatarGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}