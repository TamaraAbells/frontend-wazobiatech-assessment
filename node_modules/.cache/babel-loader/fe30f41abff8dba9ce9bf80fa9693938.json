{"ast":null,"code":"/*\n * ! @chakra-ui/vue v0.12.0 by Jonathan Bakebwa @codebender828\n * MIT License\n * https://github.com/chakra-ui/chakra-ui-vue\n */\nimport { R as createStyledAttrsMixin, M as isDef, J as useId, C as cleanChildren, A as cloneVNodeElement } from './index-2557a15f.js';\nimport './chakra-ui-styled-system.esm-36097b89.js';\nimport '@emotion/css';\nimport 'vue';\nimport './color-mode-observer-d3e4ca7f.js';\nimport CBox from './CBox.js';\nimport { a as SNA } from './props.types-dc7c9add.js';\n/**\n * Hey! Welcome to @chakra-ui/vue CCheckboxGroup\n *\n * CCheckboxGroup component allows the user to group a\n * related collection of checkboxes in one visual region.\n *\n * @see Docs     https://vue.chakra-ui.com/checkbox\n * @see Source   https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCheckboxGroup/CCheckboxGroup.js\n * @see A11y     https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCheckbox/accessibility.md\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#button\n */\n\n/**\n * CButtonGroup component\n *\n * Wrapper for children `CCheckbox` components\n *\n * @extends CBox\n * @see Docs https://vue.chakra-ui.com/button\n */\n\nvar CCheckboxGroup = {\n  name: 'CCheckboxGroup',\n  mixins: [createStyledAttrsMixin('CCheckboxGroup')],\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    name: String,\n    variantColor: String,\n    size: String,\n    defaultValue: Array,\n    isInline: Boolean,\n    value: Array,\n    spacing: {\n      type: SNA,\n      default: 2\n    }\n  },\n  data: function data() {\n    return {\n      values: this.defaultValue || []\n    };\n  },\n  computed: {\n    isControlled: function isControlled() {\n      return isDef(this.value);\n    },\n    _values: function _values() {\n      return this.isControlled ? this.value : this.values;\n    },\n    checkboxName: function checkboxName() {\n      return this.name || \"checkbox-group-\" + useId();\n    }\n  },\n  methods: {\n    /**\n     * Handles change event for checkbox group\n     * @param {Event} event Event object\n     */\n    onChange: function onChange(val, event) {\n      var ref = event.target;\n      var checked = ref.checked;\n      var value = ref.value;\n      var newValues;\n\n      if (checked) {\n        newValues = this._values.concat([value]);\n      } else {\n        newValues = this._values.filter(function (val) {\n          return val !== value;\n        });\n      }\n\n      if (!this.isControlled) {\n        this.values = newValues;\n      }\n\n      this.$emit('change', newValues);\n    }\n  },\n  render: function render(h) {\n    var this$1 = this;\n    var children = cleanChildren(this.$slots.default);\n    var clones = children.map(function (vnode, index) {\n      var isLastCheckbox = children.length === index + 1;\n      var spacingProps = this$1.isInline ? {\n        mr: this$1.spacing\n      } : {\n        mb: this$1.spacing\n      };\n      var el = cloneVNodeElement(vnode, {\n        props: {\n          size: this$1.size,\n          variantColor: this$1.variantColor,\n          name: this$1.checkboxName + \"-\" + index,\n          isChecked: this$1._values.includes(vnode.componentOptions.propsData.value)\n        },\n        on: {\n          change: this$1.onChange\n        }\n      }, h);\n      return h(CBox, {\n        attrs: Object.assign({}, {\n          display: this$1.isInline ? 'inline-block' : 'block'\n        }, !isLastCheckbox && spacingProps)\n      }, [el]);\n    });\n    return h('div', {\n      class: [this.className],\n      attrs: Object.assign({}, this.computedAttrs, {\n        role: 'group'\n      })\n    }, clones);\n  }\n};\nexport default CCheckboxGroup;","map":{"version":3,"names":["R","createStyledAttrsMixin","M","isDef","J","useId","C","cleanChildren","A","cloneVNodeElement","CBox","a","SNA","CCheckboxGroup","name","mixins","model","prop","event","props","String","variantColor","size","defaultValue","Array","isInline","Boolean","value","spacing","type","default","data","values","computed","isControlled","_values","checkboxName","methods","onChange","val","ref","target","checked","newValues","concat","filter","$emit","render","h","this$1","children","$slots","clones","map","vnode","index","isLastCheckbox","length","spacingProps","mr","mb","el","isChecked","includes","componentOptions","propsData","on","change","attrs","Object","assign","display","class","className","computedAttrs","role"],"sources":["/Users/user/Documents/GitHub/frontend-eng-assessment/node_modules/@chakra-ui/vue/dist/esm/CCheckboxGroup.js"],"sourcesContent":["\n/*\n * ! @chakra-ui/vue v0.12.0 by Jonathan Bakebwa @codebender828\n * MIT License\n * https://github.com/chakra-ui/chakra-ui-vue\n */\n\nimport { R as createStyledAttrsMixin, M as isDef, J as useId, C as cleanChildren, A as cloneVNodeElement } from './index-2557a15f.js';\nimport './chakra-ui-styled-system.esm-36097b89.js';\nimport '@emotion/css';\nimport 'vue';\nimport './color-mode-observer-d3e4ca7f.js';\nimport CBox from './CBox.js';\nimport { a as SNA } from './props.types-dc7c9add.js';\n\n/**\n * Hey! Welcome to @chakra-ui/vue CCheckboxGroup\n *\n * CCheckboxGroup component allows the user to group a\n * related collection of checkboxes in one visual region.\n *\n * @see Docs     https://vue.chakra-ui.com/checkbox\n * @see Source   https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCheckboxGroup/CCheckboxGroup.js\n * @see A11y     https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CCheckbox/accessibility.md\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#button\n */\n/**\n * CButtonGroup component\n *\n * Wrapper for children `CCheckbox` components\n *\n * @extends CBox\n * @see Docs https://vue.chakra-ui.com/button\n */\n\nvar CCheckboxGroup = {\n  name: 'CCheckboxGroup',\n  mixins: [createStyledAttrsMixin('CCheckboxGroup')],\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    name: String,\n    variantColor: String,\n    size: String,\n    defaultValue: Array,\n    isInline: Boolean,\n    value: Array,\n    spacing: {\n      type: SNA,\n      default: 2\n    }\n  },\n  data: function data() {\n    return {\n      values: this.defaultValue || []\n    };\n  },\n  computed: {\n    isControlled: function isControlled() {\n      return isDef(this.value);\n    },\n    _values: function _values() {\n      return this.isControlled ? this.value : this.values;\n    },\n    checkboxName: function checkboxName() {\n      return this.name || \"checkbox-group-\" + useId();\n    }\n  },\n  methods: {\n    /**\n     * Handles change event for checkbox group\n     * @param {Event} event Event object\n     */\n    onChange: function onChange(val, event) {\n      var ref = event.target;\n      var checked = ref.checked;\n      var value = ref.value;\n      var newValues;\n\n      if (checked) {\n        newValues = this._values.concat([value]);\n      } else {\n        newValues = this._values.filter(function (val) {\n          return val !== value;\n        });\n      }\n\n      if (!this.isControlled) {\n        this.values = newValues;\n      }\n\n      this.$emit('change', newValues);\n    }\n  },\n  render: function render(h) {\n    var this$1 = this;\n    var children = cleanChildren(this.$slots.default);\n    var clones = children.map(function (vnode, index) {\n      var isLastCheckbox = children.length === index + 1;\n      var spacingProps = this$1.isInline ? {\n        mr: this$1.spacing\n      } : {\n        mb: this$1.spacing\n      };\n      var el = cloneVNodeElement(vnode, {\n        props: {\n          size: this$1.size,\n          variantColor: this$1.variantColor,\n          name: this$1.checkboxName + \"-\" + index,\n          isChecked: this$1._values.includes(vnode.componentOptions.propsData.value)\n        },\n        on: {\n          change: this$1.onChange\n        }\n      }, h);\n      return h(CBox, {\n        attrs: Object.assign({}, {\n          display: this$1.isInline ? 'inline-block' : 'block'\n        }, !isLastCheckbox && spacingProps)\n      }, [el]);\n    });\n    return h('div', {\n      class: [this.className],\n      attrs: Object.assign({}, this.computedAttrs, {\n        role: 'group'\n      })\n    }, clones);\n  }\n};\n\nexport default CCheckboxGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}