{"ast":null,"code":"import Vue from 'vue';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as Actions from '../actions';\nconst initialState = {\n  isOpen: false,\n  isShow: false,\n  isLoading: true,\n  isLoggedIn: false,\n  isVerifiedAt: '',\n  verifyToken: '',\n  currentUser: {},\n  authToken: '',\n  register: {\n    email: '',\n    password: '',\n    fname: '',\n    lname: ''\n  },\n  item: {},\n  items: []\n};\nexport const reducer = createReducer(initialState, builder => {\n  builder // .addCase(Actions.openModal, (state, action) => {\n  //   state.isOpen = true\n  // })\n  .addCase(Actions.closeModal, (state, action) => {\n    state.isOpen = false;\n  }).addCase(Actions.togglePassword, (state, action) => {\n    state.isShow = !state.isShow;\n  }).addCase(Actions.isLoading, (state, action) => {\n    state.isLoading = true;\n  }).addCase(Actions.isLoaded, (state, action) => {\n    state.isLoading = false;\n  }).addCase(Actions.fetchAllItems, (state, action) => {\n    state.items = action.payload;\n    state.isLoading = false;\n  }).addCase(Actions.addItem, (state, action) => {\n    state.item = {};\n    state.items = [action.payload, ...state.items], state.isLoading = false;\n    state.isOpen = false;\n  }).addCase(Actions.editItem, (state, action) => {\n    state.item = action.payload;\n    state.isOpen = false;\n  }).addCase(Actions.updateItem, (state, action) => {\n    state.item = {};\n    const index = state.items.findIndex(i => i.id === action.payload.id);\n    state.items[index] = action.payload;\n    state.isOpen = false;\n    state.isLoading = false;\n  }).addCase(Actions.removeItem, (state, action) => {\n    state.items = state.items.filter(item => item.uuid !== action.payload);\n    state.isLoading = false;\n  }).addCase(Actions.register, (state, action) => {\n    Vue.$cookies.set('authToken', action.payload.authToken, '3D');\n    state.authToken = action.payload.authToken;\n    state.currentUser = action.payload.currentUser;\n    state.isLoggedIn = true;\n  }).addCase(Actions.login, (state, action) => {\n    Vue.$cookies.set('authToken', action.payload.authToken, '3D');\n    state.authToken = action.payload.authToken;\n    state.currentUser = action.payload.currentUser;\n    state.isLoggedIn = true;\n  }).addCase(Actions.logout, (state, action) => {\n    Vue.$cookies.remove('authToken');\n    state.authToken = '';\n    state.currentUser = '';\n    state.isLoggedIn = false;\n  }).addCase(Actions.currentUser, (state, action) => {\n    state.isLoggedIn = true;\n    state.currentUser = action.payload;\n    state.isVerifiedAt = action.payload.email_verified_at;\n    state.verifyToken = action.payload.email_verification_token;\n  }).addCase(Actions.verifyAccount, (state, action) => {\n    state.currentUser = action.payload;\n    state.isVerifiedAt = action.payload.email_verified_at;\n  }).addCase(Actions.setToken, (state, action) => {\n    state.authToken = action.payload;\n  });\n}); // export const reducer1 = createReducer(initialState, {\n//   OPEN_MODAL: (state, action) => {\n//     state.isOpen = true\n//   },\n//   CLOSE_MODAL: (state, action) => {\n//     state.isOpen = false\n//   },\n//   SHOW_PASSWORD: (state, action) => {\n//     state.isShow = !state.isShow\n//   },\n//   IS_LOADING: (state, action) => {\n//     state.isLoading = true\n//   },\n//   IS_LOADED: (state, action) => {\n//     state.isLoading = false\n//   },\n//   FETCH_ALL_ITEMS: (state, action) => {\n//     state.items = action.payload\n//     state.isLoading = false\n//   },\n//   REMOVE_ITEM: (state, action) => {\n//     state.items = state.items.filter((item) => (\n//       item.uuid !== action.payload\n//     ))\n//     state.isLoading = false\n//   },\n//   ADD_ITEM: (state, action) => {\n//     state.item = {}\n//     state.items = [action.payload, ...state.items],\n//     state.isLoading = false\n//     state.isOpen = false\n//   },\n//   EDIT_ITEM: (state, action) => {\n//     state.item = action.payload\n//     state.isOpen = false\n//   },\n//   UPDATE_ITEM: (state, action) => {\n//     state.item = {}\n//     const index = state.items.findIndex(i => i.id === action.payload.id)\n//     state.items[index] = action.payload\n//     state.isOpen = false\n//     state.isLoading = false\n//   },\n//   REGISTER: (state, action) => {\n//     Vue.$cookies.set('authToken', action.payload.authToken, '3D')\n//     state.authToken = action.payload.authToken\n//     state.currentUser = action.payload.currentUser\n//     state.isLoggedIn = true\n//   },\n//   LOGIN: (state, action) => {\n//     Vue.$cookies.set('authToken', action.payload.authToken, '3D')\n//     state.authToken = action.payload.authToken\n//     state.currentUser = action.payload.currentUser\n//     state.isLoggedIn = true\n//   },\n//   LOGOUT: (state, action) => {\n//     Vue.$cookies.remove('authToken')\n//     state.authToken = ''\n//     state.currentUser = ''\n//     state.isLoggedIn = false\n//   },\n//   CURRENT_USER: (state, action) => {\n//     state.isLoggedIn = true\n//     state.currentUser = action.payload\n//     state.isVerifiedAt = action.payload.email_verified_at\n//     state.verifyToken = action.payload.email_verification_token\n//   },\n//   VERIFY_ACCOUNT: (state, action) => {\n//     state.currentUser = action.payload\n//     state.isVerifiedAt = action.payload.email_verified_at\n//   },\n//   SET_TOKEN: (state, action) => {\n//     state.authToken = action.payload\n//   }\n// })","map":{"version":3,"names":["Vue","createReducer","Actions","initialState","isOpen","isShow","isLoading","isLoggedIn","isVerifiedAt","verifyToken","currentUser","authToken","register","email","password","fname","lname","item","items","reducer","builder","addCase","closeModal","state","action","togglePassword","isLoaded","fetchAllItems","payload","addItem","editItem","updateItem","index","findIndex","i","id","removeItem","filter","uuid","$cookies","set","login","logout","remove","email_verified_at","email_verification_token","verifyAccount","setToken"],"sources":["/Users/user/Documents/GitHub/frontend-eng-assessment/src/redux/reducers/reducer.js"],"sourcesContent":["import Vue from 'vue'\nimport { createReducer } from '@reduxjs/toolkit'\nimport * as Actions from '../actions'\n\nconst initialState = {\n  isOpen: false,\n  isShow: false,\n  isLoading: true,\n  isLoggedIn: false,\n  isVerifiedAt: '',\n  verifyToken: '',\n  currentUser: {},\n  authToken: '',\n  register: {\n    email: '',\n    password: '',\n    fname: '',\n    lname: '',\n  },\n  item: {},\n  items: []\n}\n\nexport const reducer = createReducer(initialState, (builder) => {\n  builder\n    // .addCase(Actions.openModal, (state, action) => {\n    //   state.isOpen = true\n    // })\n    .addCase(Actions.closeModal, (state, action) => {\n      state.isOpen = false\n    })\n    .addCase(Actions.togglePassword, (state, action) => {\n      state.isShow = !state.isShow\n    })\n    .addCase(Actions.isLoading, (state, action) => {\n      state.isLoading = true\n    })\n    .addCase(Actions.isLoaded, (state, action) => {\n      state.isLoading = false\n    })\n    .addCase(Actions.fetchAllItems, (state, action) => {\n      state.items = action.payload\n      state.isLoading = false\n    })\n    .addCase(Actions.addItem, (state, action) => {\n      state.item = {}\n      state.items = [action.payload, ...state.items],\n      state.isLoading = false\n      state.isOpen = false\n    })\n    .addCase(Actions.editItem, (state, action) => {\n      state.item = action.payload\n      state.isOpen = false\n    })\n    .addCase(Actions.updateItem, (state, action) => {\n      state.item = {}\n      const index = state.items.findIndex(i => i.id === action.payload.id)\n      state.items[index] = action.payload\n      state.isOpen = false\n      state.isLoading = false\n    })\n    .addCase(Actions.removeItem, (state, action) => {\n      state.items = state.items.filter((item) => (\n        item.uuid !== action.payload\n      ))\n      state.isLoading = false\n    })\n    .addCase(Actions.register, (state, action) => {\n      Vue.$cookies.set('authToken', action.payload.authToken, '3D')\n      state.authToken = action.payload.authToken\n      state.currentUser = action.payload.currentUser\n      state.isLoggedIn = true\n    })\n    .addCase(Actions.login, (state, action) => {\n      Vue.$cookies.set('authToken', action.payload.authToken, '3D')\n      state.authToken = action.payload.authToken\n      state.currentUser = action.payload.currentUser\n      state.isLoggedIn = true\n    })\n    .addCase(Actions.logout, (state, action) => {\n      Vue.$cookies.remove('authToken')\n      state.authToken = ''\n      state.currentUser = ''\n      state.isLoggedIn = false\n    })\n    .addCase(Actions.currentUser, (state, action) => {\n      state.isLoggedIn = true\n      state.currentUser = action.payload\n      state.isVerifiedAt = action.payload.email_verified_at\n      state.verifyToken = action.payload.email_verification_token\n    })\n    .addCase(Actions.verifyAccount, (state, action) => {\n      state.currentUser = action.payload\n      state.isVerifiedAt = action.payload.email_verified_at\n    })\n    .addCase(Actions.setToken, (state, action) => {\n      state.authToken = action.payload\n    })\n})\n\n// export const reducer1 = createReducer(initialState, {\n//   OPEN_MODAL: (state, action) => {\n//     state.isOpen = true\n//   },\n//   CLOSE_MODAL: (state, action) => {\n//     state.isOpen = false\n//   },\n//   SHOW_PASSWORD: (state, action) => {\n//     state.isShow = !state.isShow\n//   },\n//   IS_LOADING: (state, action) => {\n//     state.isLoading = true\n//   },\n//   IS_LOADED: (state, action) => {\n//     state.isLoading = false\n//   },\n//   FETCH_ALL_ITEMS: (state, action) => {\n//     state.items = action.payload\n//     state.isLoading = false\n//   },\n//   REMOVE_ITEM: (state, action) => {\n//     state.items = state.items.filter((item) => (\n//       item.uuid !== action.payload\n//     ))\n//     state.isLoading = false\n//   },\n//   ADD_ITEM: (state, action) => {\n//     state.item = {}\n//     state.items = [action.payload, ...state.items],\n//     state.isLoading = false\n//     state.isOpen = false\n//   },\n//   EDIT_ITEM: (state, action) => {\n//     state.item = action.payload\n//     state.isOpen = false\n//   },\n//   UPDATE_ITEM: (state, action) => {\n//     state.item = {}\n//     const index = state.items.findIndex(i => i.id === action.payload.id)\n//     state.items[index] = action.payload\n//     state.isOpen = false\n//     state.isLoading = false\n//   },\n//   REGISTER: (state, action) => {\n//     Vue.$cookies.set('authToken', action.payload.authToken, '3D')\n//     state.authToken = action.payload.authToken\n//     state.currentUser = action.payload.currentUser\n//     state.isLoggedIn = true\n//   },\n//   LOGIN: (state, action) => {\n//     Vue.$cookies.set('authToken', action.payload.authToken, '3D')\n//     state.authToken = action.payload.authToken\n//     state.currentUser = action.payload.currentUser\n//     state.isLoggedIn = true\n//   },\n//   LOGOUT: (state, action) => {\n//     Vue.$cookies.remove('authToken')\n//     state.authToken = ''\n//     state.currentUser = ''\n//     state.isLoggedIn = false\n//   },\n//   CURRENT_USER: (state, action) => {\n//     state.isLoggedIn = true\n//     state.currentUser = action.payload\n//     state.isVerifiedAt = action.payload.email_verified_at\n//     state.verifyToken = action.payload.email_verification_token\n//   },\n//   VERIFY_ACCOUNT: (state, action) => {\n//     state.currentUser = action.payload\n//     state.isVerifiedAt = action.payload.email_verified_at\n//   },\n//   SET_TOKEN: (state, action) => {\n//     state.authToken = action.payload\n//   }\n// })\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AAEA,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,KADW;EAEnBC,MAAM,EAAE,KAFW;EAGnBC,SAAS,EAAE,IAHQ;EAInBC,UAAU,EAAE,KAJO;EAKnBC,YAAY,EAAE,EALK;EAMnBC,WAAW,EAAE,EANM;EAOnBC,WAAW,EAAE,EAPM;EAQnBC,SAAS,EAAE,EARQ;EASnBC,QAAQ,EAAE;IACRC,KAAK,EAAE,EADC;IAERC,QAAQ,EAAE,EAFF;IAGRC,KAAK,EAAE,EAHC;IAIRC,KAAK,EAAE;EAJC,CATS;EAenBC,IAAI,EAAE,EAfa;EAgBnBC,KAAK,EAAE;AAhBY,CAArB;AAmBA,OAAO,MAAMC,OAAO,GAAGlB,aAAa,CAACE,YAAD,EAAgBiB,OAAD,IAAa;EAC9DA,OAAO,CACL;EACA;EACA;EAHK,CAIJC,OAJH,CAIWnB,OAAO,CAACoB,UAJnB,EAI+B,CAACC,KAAD,EAAQC,MAAR,KAAmB;IAC9CD,KAAK,CAACnB,MAAN,GAAe,KAAf;EACD,CANH,EAOGiB,OAPH,CAOWnB,OAAO,CAACuB,cAPnB,EAOmC,CAACF,KAAD,EAAQC,MAAR,KAAmB;IAClDD,KAAK,CAAClB,MAAN,GAAe,CAACkB,KAAK,CAAClB,MAAtB;EACD,CATH,EAUGgB,OAVH,CAUWnB,OAAO,CAACI,SAVnB,EAU8B,CAACiB,KAAD,EAAQC,MAAR,KAAmB;IAC7CD,KAAK,CAACjB,SAAN,GAAkB,IAAlB;EACD,CAZH,EAaGe,OAbH,CAaWnB,OAAO,CAACwB,QAbnB,EAa6B,CAACH,KAAD,EAAQC,MAAR,KAAmB;IAC5CD,KAAK,CAACjB,SAAN,GAAkB,KAAlB;EACD,CAfH,EAgBGe,OAhBH,CAgBWnB,OAAO,CAACyB,aAhBnB,EAgBkC,CAACJ,KAAD,EAAQC,MAAR,KAAmB;IACjDD,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACI,OAArB;IACAL,KAAK,CAACjB,SAAN,GAAkB,KAAlB;EACD,CAnBH,EAoBGe,OApBH,CAoBWnB,OAAO,CAAC2B,OApBnB,EAoB4B,CAACN,KAAD,EAAQC,MAAR,KAAmB;IAC3CD,KAAK,CAACN,IAAN,GAAa,EAAb;IACAM,KAAK,CAACL,KAAN,GAAc,CAACM,MAAM,CAACI,OAAR,EAAiB,GAAGL,KAAK,CAACL,KAA1B,CAAd,EACAK,KAAK,CAACjB,SAAN,GAAkB,KADlB;IAEAiB,KAAK,CAACnB,MAAN,GAAe,KAAf;EACD,CAzBH,EA0BGiB,OA1BH,CA0BWnB,OAAO,CAAC4B,QA1BnB,EA0B6B,CAACP,KAAD,EAAQC,MAAR,KAAmB;IAC5CD,KAAK,CAACN,IAAN,GAAaO,MAAM,CAACI,OAApB;IACAL,KAAK,CAACnB,MAAN,GAAe,KAAf;EACD,CA7BH,EA8BGiB,OA9BH,CA8BWnB,OAAO,CAAC6B,UA9BnB,EA8B+B,CAACR,KAAD,EAAQC,MAAR,KAAmB;IAC9CD,KAAK,CAACN,IAAN,GAAa,EAAb;IACA,MAAMe,KAAK,GAAGT,KAAK,CAACL,KAAN,CAAYe,SAAZ,CAAsBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASX,MAAM,CAACI,OAAP,CAAeO,EAAnD,CAAd;IACAZ,KAAK,CAACL,KAAN,CAAYc,KAAZ,IAAqBR,MAAM,CAACI,OAA5B;IACAL,KAAK,CAACnB,MAAN,GAAe,KAAf;IACAmB,KAAK,CAACjB,SAAN,GAAkB,KAAlB;EACD,CApCH,EAqCGe,OArCH,CAqCWnB,OAAO,CAACkC,UArCnB,EAqC+B,CAACb,KAAD,EAAQC,MAAR,KAAmB;IAC9CD,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYmB,MAAZ,CAAoBpB,IAAD,IAC/BA,IAAI,CAACqB,IAAL,KAAcd,MAAM,CAACI,OADT,CAAd;IAGAL,KAAK,CAACjB,SAAN,GAAkB,KAAlB;EACD,CA1CH,EA2CGe,OA3CH,CA2CWnB,OAAO,CAACU,QA3CnB,EA2C6B,CAACW,KAAD,EAAQC,MAAR,KAAmB;IAC5CxB,GAAG,CAACuC,QAAJ,CAAaC,GAAb,CAAiB,WAAjB,EAA8BhB,MAAM,CAACI,OAAP,CAAejB,SAA7C,EAAwD,IAAxD;IACAY,KAAK,CAACZ,SAAN,GAAkBa,MAAM,CAACI,OAAP,CAAejB,SAAjC;IACAY,KAAK,CAACb,WAAN,GAAoBc,MAAM,CAACI,OAAP,CAAelB,WAAnC;IACAa,KAAK,CAAChB,UAAN,GAAmB,IAAnB;EACD,CAhDH,EAiDGc,OAjDH,CAiDWnB,OAAO,CAACuC,KAjDnB,EAiD0B,CAAClB,KAAD,EAAQC,MAAR,KAAmB;IACzCxB,GAAG,CAACuC,QAAJ,CAAaC,GAAb,CAAiB,WAAjB,EAA8BhB,MAAM,CAACI,OAAP,CAAejB,SAA7C,EAAwD,IAAxD;IACAY,KAAK,CAACZ,SAAN,GAAkBa,MAAM,CAACI,OAAP,CAAejB,SAAjC;IACAY,KAAK,CAACb,WAAN,GAAoBc,MAAM,CAACI,OAAP,CAAelB,WAAnC;IACAa,KAAK,CAAChB,UAAN,GAAmB,IAAnB;EACD,CAtDH,EAuDGc,OAvDH,CAuDWnB,OAAO,CAACwC,MAvDnB,EAuD2B,CAACnB,KAAD,EAAQC,MAAR,KAAmB;IAC1CxB,GAAG,CAACuC,QAAJ,CAAaI,MAAb,CAAoB,WAApB;IACApB,KAAK,CAACZ,SAAN,GAAkB,EAAlB;IACAY,KAAK,CAACb,WAAN,GAAoB,EAApB;IACAa,KAAK,CAAChB,UAAN,GAAmB,KAAnB;EACD,CA5DH,EA6DGc,OA7DH,CA6DWnB,OAAO,CAACQ,WA7DnB,EA6DgC,CAACa,KAAD,EAAQC,MAAR,KAAmB;IAC/CD,KAAK,CAAChB,UAAN,GAAmB,IAAnB;IACAgB,KAAK,CAACb,WAAN,GAAoBc,MAAM,CAACI,OAA3B;IACAL,KAAK,CAACf,YAAN,GAAqBgB,MAAM,CAACI,OAAP,CAAegB,iBAApC;IACArB,KAAK,CAACd,WAAN,GAAoBe,MAAM,CAACI,OAAP,CAAeiB,wBAAnC;EACD,CAlEH,EAmEGxB,OAnEH,CAmEWnB,OAAO,CAAC4C,aAnEnB,EAmEkC,CAACvB,KAAD,EAAQC,MAAR,KAAmB;IACjDD,KAAK,CAACb,WAAN,GAAoBc,MAAM,CAACI,OAA3B;IACAL,KAAK,CAACf,YAAN,GAAqBgB,MAAM,CAACI,OAAP,CAAegB,iBAApC;EACD,CAtEH,EAuEGvB,OAvEH,CAuEWnB,OAAO,CAAC6C,QAvEnB,EAuE6B,CAACxB,KAAD,EAAQC,MAAR,KAAmB;IAC5CD,KAAK,CAACZ,SAAN,GAAkBa,MAAM,CAACI,OAAzB;EACD,CAzEH;AA0ED,CA3EmC,CAA7B,C,CA6EP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}