{"ast":null,"code":"/*\n * ! @chakra-ui/vue v0.12.0 by Jonathan Bakebwa @codebender828\n * MIT License\n * https://github.com/chakra-ui/chakra-ui-vue\n */\nimport { n as isDarkColor } from './index-2557a15f.js';\n/**\n * @description Converts a string variable to hex code.\n * @param {String} str\n * @note Found this on ChakraUI and StackOverflow :D\n * @returns {String}\n */\n\nfunction string2Hex(str) {\n  var hash = 0;\n\n  if (str.length === 0) {\n    return hash;\n  }\n\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n\n  var color = '#';\n\n  for (var j = 0; j < 3; j++) {\n    var value = hash >> j * 8 & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n\nvar avatarSizes = {\n  '2xs': 4,\n  xs: 6,\n  sm: 8,\n  md: 12,\n  lg: 16,\n  xl: 24,\n  '2xl': 32,\n  full: 'full'\n};\n/**\n * @description Evaluate style props for avatar\n * @param {{ size: String, name: String, showBorder: Boolean, borderColor: String, theme: Function colorMode: String }} param0\n * @returns {Object} Style props object\n */\n\nfunction useAvatarStyles(ref) {\n  var size = ref.size;\n  var name = ref.name;\n  var showBorder = ref.showBorder;\n  var borderColor = ref.borderColor;\n  var theme = ref.theme;\n  var colorMode = ref.colorMode;\n  var colors = theme.colors;\n  var bg = name ? string2Hex(name) : colors.gray[400];\n  var color = name ? isDarkColor(bg) ? '#fff' : 'gray.800' : '#fff';\n  var _borderColor = {\n    light: '#fff',\n    dark: 'gray.800'\n  };\n  var baseProps = {\n    display: 'inline-flex',\n    rounded: 'full',\n    alignItems: 'center',\n    flexShrink: '0',\n    justifyContent: 'center',\n    position: 'relative'\n  };\n  return Object.assign({}, baseProps, {\n    w: avatarSizes[size],\n    h: avatarSizes[size],\n    bg: bg,\n    color: color\n  }, showBorder && {\n    border: '2px',\n    borderColor: borderColor || _borderColor[colorMode]\n  });\n}\n\nexport { avatarSizes as a, useAvatarStyles as u };","map":{"version":3,"names":["n","isDarkColor","string2Hex","str","hash","length","i","charCodeAt","color","j","value","toString","substr","avatarSizes","xs","sm","md","lg","xl","full","useAvatarStyles","ref","size","name","showBorder","borderColor","theme","colorMode","colors","bg","gray","_borderColor","light","dark","baseProps","display","rounded","alignItems","flexShrink","justifyContent","position","Object","assign","w","h","border","a","u"],"sources":["/Users/user/Documents/GitHub/frontend-eng-assessment/node_modules/@chakra-ui/vue/dist/esm/avatar.styles-8b001767.js"],"sourcesContent":["\n/*\n * ! @chakra-ui/vue v0.12.0 by Jonathan Bakebwa @codebender828\n * MIT License\n * https://github.com/chakra-ui/chakra-ui-vue\n */\n\nimport { n as isDarkColor } from './index-2557a15f.js';\n\n/**\n * @description Converts a string variable to hex code.\n * @param {String} str\n * @note Found this on ChakraUI and StackOverflow :D\n * @returns {String}\n */\n\nfunction string2Hex(str) {\n  var hash = 0;\n\n  if (str.length === 0) {\n    return hash;\n  }\n\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n\n  var color = '#';\n\n  for (var j = 0; j < 3; j++) {\n    var value = hash >> j * 8 & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n\nvar avatarSizes = {\n  '2xs': 4,\n  xs: 6,\n  sm: 8,\n  md: 12,\n  lg: 16,\n  xl: 24,\n  '2xl': 32,\n  full: 'full'\n};\n/**\n * @description Evaluate style props for avatar\n * @param {{ size: String, name: String, showBorder: Boolean, borderColor: String, theme: Function colorMode: String }} param0\n * @returns {Object} Style props object\n */\n\nfunction useAvatarStyles(ref) {\n  var size = ref.size;\n  var name = ref.name;\n  var showBorder = ref.showBorder;\n  var borderColor = ref.borderColor;\n  var theme = ref.theme;\n  var colorMode = ref.colorMode;\n  var colors = theme.colors;\n  var bg = name ? string2Hex(name) : colors.gray[400];\n  var color = name ? isDarkColor(bg) ? '#fff' : 'gray.800' : '#fff';\n  var _borderColor = {\n    light: '#fff',\n    dark: 'gray.800'\n  };\n  var baseProps = {\n    display: 'inline-flex',\n    rounded: 'full',\n    alignItems: 'center',\n    flexShrink: '0',\n    justifyContent: 'center',\n    position: 'relative'\n  };\n  return Object.assign({}, baseProps, {\n    w: avatarSizes[size],\n    h: avatarSizes[size],\n    bg: bg,\n    color: color\n  }, showBorder && {\n    border: '2px',\n    borderColor: borderColor || _borderColor[colorMode]\n  });\n}\n\nexport { avatarSizes as a, useAvatarStyles as u };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}