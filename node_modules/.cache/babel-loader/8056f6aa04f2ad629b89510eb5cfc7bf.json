{"ast":null,"code":"/*\n * ! @chakra-ui/vue v0.12.0 by Jonathan Bakebwa @codebender828\n * MIT License\n * https://github.com/chakra-ui/chakra-ui-vue\n */\nimport 'vue';\nimport { a as colorModeObserverEventBus } from './color-mode-observer-d3e4ca7f.js';\n/**\n * Hey! Welcome to @chakra-ui/vue ColorModePovider\n *\n * The `CColorModeProvider` component provides the current color mode value (\"light\" or \"dark\")\n * to all it's descendants. This variable can be injected as `$chakraColorMode`.\n * `$chakraColorMode` is a function that returns the current color mode value.\n *\n * The `CColorModeProvider` component also provides a function `$toggleColorMode` to switch\n * the `$chakraColorMode` between light and dark values at runtime.\n *\n * This file also exports the `CDarkMode` and `CLightMode` components that respectively\n * provide the \"dark\" and \"light\" color modes to their respective children.\n *\n * @see Example  https://chakra-ui-vue.netlify.com/?path=/story/ui-popover--hover-trigger\n * @see Docs     https://vue.chakra-ui.com/color-mode\n * @see Source   https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CColorModePovider/CColorModePovider.js\n */\n\n/**\n * CColorModeProvider component\n *\n * The ColorModeProvider component provides the current color mode value\n *\n * @see Docs https://vue.chakra-ui.com/color-mode\n */\n\nvar CColorModeProvider = {\n  name: 'CColorModeProvider',\n  props: {\n    value: String\n  },\n  data: function data() {\n    return {\n      colorMode: 'light'\n    };\n  },\n  provide: function provide() {\n    var this$1 = this;\n    return {\n      $chakraColorMode: function $chakraColorMode() {\n        return this$1._colorMode;\n      },\n      $toggleColorMode: this.toggleColorMode\n    };\n  },\n  computed: {\n    _colorMode: {\n      get: function get() {\n        return this.value ? this.value : this.colorMode;\n      },\n      set: function set(value) {\n        this.colorMode = value;\n      }\n    }\n  },\n  created: function created() {\n    var this$1 = this;\n    colorModeObserverEventBus.$emit('change:colorMode', this._colorMode);\n    this.$watch(function () {\n      return this$1._colorMode;\n    }, function (newColorMode) {\n      colorModeObserverEventBus.$emit('change:colorMode', newColorMode);\n    });\n    colorModeObserverEventBus.$on('command:toggleColorMode', this.toggleColorMode);\n  },\n  methods: {\n    toggleColorMode: function toggleColorMode() {\n      /** Toggles colorMode */\n      this._colorMode = this._colorMode === 'light' ? 'dark' : 'light';\n    }\n  },\n  render: function render() {\n    return this.$scopedSlots.default({\n      colorMode: this._colorMode,\n      toggleColorMode: this.toggleColorMode\n    });\n  }\n};\n/**\n * CDarkMode component\n *\n * Provides `$chakraColorMode` of value \"light\" to its descendants\n *\n * @see Docs https://vue.chakra-ui.com/color-mode\n */\n\nvar CDarkMode = {\n  name: 'CDarkMode',\n  render: function render(h) {\n    return h(CColorModeProvider, {\n      props: {\n        value: 'dark'\n      }\n    }, this.$slots.default);\n  }\n};\n/**\n * CLightMode component\n *\n * Provides `$chakraColorMode` of value \"light\" to its descendants\n *\n * @see Docs https://vue.chakra-ui.com/color-mode\n */\n\nvar CLightMode = {\n  name: 'CLightMode',\n  render: function render(h) {\n    return h(CColorModeProvider, {\n      props: {\n        value: 'light'\n      }\n    }, this.$slots.default);\n  }\n};\nexport default CColorModeProvider;\nexport { CDarkMode, CLightMode };","map":{"version":3,"names":["a","colorModeObserverEventBus","CColorModeProvider","name","props","value","String","data","colorMode","provide","this$1","$chakraColorMode","_colorMode","$toggleColorMode","toggleColorMode","computed","get","set","created","$emit","$watch","newColorMode","$on","methods","render","$scopedSlots","default","CDarkMode","h","$slots","CLightMode"],"sources":["/Users/user/Documents/GitHub/frontend-eng-assessment/node_modules/@chakra-ui/vue/dist/esm/CColorModeProvider.js"],"sourcesContent":["\n/*\n * ! @chakra-ui/vue v0.12.0 by Jonathan Bakebwa @codebender828\n * MIT License\n * https://github.com/chakra-ui/chakra-ui-vue\n */\n\nimport 'vue';\nimport { a as colorModeObserverEventBus } from './color-mode-observer-d3e4ca7f.js';\n\n/**\n * Hey! Welcome to @chakra-ui/vue ColorModePovider\n *\n * The `CColorModeProvider` component provides the current color mode value (\"light\" or \"dark\")\n * to all it's descendants. This variable can be injected as `$chakraColorMode`.\n * `$chakraColorMode` is a function that returns the current color mode value.\n *\n * The `CColorModeProvider` component also provides a function `$toggleColorMode` to switch\n * the `$chakraColorMode` between light and dark values at runtime.\n *\n * This file also exports the `CDarkMode` and `CLightMode` components that respectively\n * provide the \"dark\" and \"light\" color modes to their respective children.\n *\n * @see Example  https://chakra-ui-vue.netlify.com/?path=/story/ui-popover--hover-trigger\n * @see Docs     https://vue.chakra-ui.com/color-mode\n * @see Source   https://github.com/chakra-ui/chakra-ui-vue/blob/master/packages/chakra-ui-core/src/CColorModePovider/CColorModePovider.js\n */\n/**\n * CColorModeProvider component\n *\n * The ColorModeProvider component provides the current color mode value\n *\n * @see Docs https://vue.chakra-ui.com/color-mode\n */\n\nvar CColorModeProvider = {\n  name: 'CColorModeProvider',\n  props: {\n    value: String\n  },\n  data: function data() {\n    return {\n      colorMode: 'light'\n    };\n  },\n  provide: function provide() {\n    var this$1 = this;\n    return {\n      $chakraColorMode: function $chakraColorMode() {\n        return this$1._colorMode;\n      },\n      $toggleColorMode: this.toggleColorMode\n    };\n  },\n  computed: {\n    _colorMode: {\n      get: function get() {\n        return this.value ? this.value : this.colorMode;\n      },\n      set: function set(value) {\n        this.colorMode = value;\n      }\n    }\n  },\n  created: function created() {\n    var this$1 = this;\n    colorModeObserverEventBus.$emit('change:colorMode', this._colorMode);\n    this.$watch(function () {\n      return this$1._colorMode;\n    }, function (newColorMode) {\n      colorModeObserverEventBus.$emit('change:colorMode', newColorMode);\n    });\n    colorModeObserverEventBus.$on('command:toggleColorMode', this.toggleColorMode);\n  },\n  methods: {\n    toggleColorMode: function toggleColorMode() {\n      /** Toggles colorMode */\n      this._colorMode = this._colorMode === 'light' ? 'dark' : 'light';\n    }\n  },\n  render: function render() {\n    return this.$scopedSlots.default({\n      colorMode: this._colorMode,\n      toggleColorMode: this.toggleColorMode\n    });\n  }\n};\n/**\n * CDarkMode component\n *\n * Provides `$chakraColorMode` of value \"light\" to its descendants\n *\n * @see Docs https://vue.chakra-ui.com/color-mode\n */\n\nvar CDarkMode = {\n  name: 'CDarkMode',\n  render: function render(h) {\n    return h(CColorModeProvider, {\n      props: {\n        value: 'dark'\n      }\n    }, this.$slots.default);\n  }\n};\n/**\n * CLightMode component\n *\n * Provides `$chakraColorMode` of value \"light\" to its descendants\n *\n * @see Docs https://vue.chakra-ui.com/color-mode\n */\n\nvar CLightMode = {\n  name: 'CLightMode',\n  render: function render(h) {\n    return h(CColorModeProvider, {\n      props: {\n        value: 'light'\n      }\n    }, this.$slots.default);\n  }\n};\n\nexport default CColorModeProvider;\nexport { CDarkMode, CLightMode };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}