{"ast":null,"code":"/*\n * ! @chakra-ui/vue v0.12.0 by Jonathan Bakebwa @codebender828\n * MIT License\n * https://github.com/chakra-ui/chakra-ui-vue\n */\n\n/**\n * Fragment component to render multiple child sibling nodes in the place of\n * their parent in the DOM.\n * Note: This is a temporary solution to create fragments in Vue 2\n * until Vue 3 releases internal Fragment support\n */\nvar CFragment = {\n  name: 'CFragment',\n  directives: {\n    fragment: {\n      inserted: function inserted(el) {\n        var fragment = document.createDocumentFragment();\n        Array.from(el.childNodes).forEach(function (child) {\n          return fragment.appendChild(child);\n        });\n        el.parentNode.insertBefore(fragment, el);\n        el.parentNode.removeChild(el);\n      }\n    }\n  },\n  render: function render(h) {\n    // Here we render div but will remove it when node is inserted.\n    // And replace it with children\n    return h('div', {\n      directives: [{\n        name: 'fragment'\n      }]\n    }, this.$slots.default);\n  }\n};\nexport default CFragment;","map":{"version":3,"names":["CFragment","name","directives","fragment","inserted","el","document","createDocumentFragment","Array","from","childNodes","forEach","child","appendChild","parentNode","insertBefore","removeChild","render","h","$slots","default"],"sources":["/Users/user/Documents/GitHub/frontend-eng-assessment/node_modules/@chakra-ui/vue/dist/esm/CFragment.js"],"sourcesContent":["\n/*\n * ! @chakra-ui/vue v0.12.0 by Jonathan Bakebwa @codebender828\n * MIT License\n * https://github.com/chakra-ui/chakra-ui-vue\n */\n\n/**\n * Fragment component to render multiple child sibling nodes in the place of\n * their parent in the DOM.\n * Note: This is a temporary solution to create fragments in Vue 2\n * until Vue 3 releases internal Fragment support\n */\nvar CFragment = {\n  name: 'CFragment',\n  directives: {\n    fragment: {\n      inserted: function inserted(el) {\n        var fragment = document.createDocumentFragment();\n        Array.from(el.childNodes).forEach(function (child) {\n          return fragment.appendChild(child);\n        });\n        el.parentNode.insertBefore(fragment, el);\n        el.parentNode.removeChild(el);\n      }\n    }\n  },\n  render: function render(h) {\n    // Here we render div but will remove it when node is inserted.\n    // And replace it with children\n    return h('div', {\n      directives: [{\n        name: 'fragment'\n      }]\n    }, this.$slots.default);\n  }\n};\n\nexport default CFragment;\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAG;EACdC,IAAI,EAAE,WADQ;EAEdC,UAAU,EAAE;IACVC,QAAQ,EAAE;MACRC,QAAQ,EAAE,SAASA,QAAT,CAAkBC,EAAlB,EAAsB;QAC9B,IAAIF,QAAQ,GAAGG,QAAQ,CAACC,sBAAT,EAAf;QACAC,KAAK,CAACC,IAAN,CAAWJ,EAAE,CAACK,UAAd,EAA0BC,OAA1B,CAAkC,UAAUC,KAAV,EAAiB;UACjD,OAAOT,QAAQ,CAACU,WAAT,CAAqBD,KAArB,CAAP;QACD,CAFD;QAGAP,EAAE,CAACS,UAAH,CAAcC,YAAd,CAA2BZ,QAA3B,EAAqCE,EAArC;QACAA,EAAE,CAACS,UAAH,CAAcE,WAAd,CAA0BX,EAA1B;MACD;IARO;EADA,CAFE;EAcdY,MAAM,EAAE,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;IACzB;IACA;IACA,OAAOA,CAAC,CAAC,KAAD,EAAQ;MACdhB,UAAU,EAAE,CAAC;QACXD,IAAI,EAAE;MADK,CAAD;IADE,CAAR,EAIL,KAAKkB,MAAL,CAAYC,OAJP,CAAR;EAKD;AAtBa,CAAhB;AAyBA,eAAepB,SAAf"},"metadata":{},"sourceType":"module"}