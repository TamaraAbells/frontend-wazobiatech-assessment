{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst counter = createSlice({\n  name: \"counter\",\n  initialState: {\n    count: 0\n  },\n  reducers: {\n    increment(state, {\n      payload\n    }) {\n      state = state + 1;\n    },\n\n    decrement(state, {\n      payload\n    }) {\n      state = state - 1;\n    },\n\n    decrement(state, {\n      payload\n    }) {\n      state = 0;\n    }\n\n  }\n});\nexport const actions = counter.actions; // Thunk is a function that delays an action until later (after async call)\n\nexport const fetchUser = () => {\n  // function that is returned receives a dispatch function\n  return async dispatch => {\n    dispatch(userActions.setLoading(true));\n    const user = await fetch(`https://jsonplaceholder.typicode.com/users/${Math.floor(Math.random() * 9)}`);\n    const parsedUser = await user.json();\n    dispatch(userActions.setUser({\n      user: parsedUser\n    }));\n    dispatch(userActions.setLoading(false));\n  };\n};\nexport default counter;","map":{"version":3,"names":["createSlice","counter","name","initialState","count","reducers","increment","state","payload","decrement","actions","fetchUser","dispatch","userActions","setLoading","user","fetch","Math","floor","random","parsedUser","json","setUser"],"sources":["/Users/user/Documents/GitHub/frontend-eng-assessment/src/redux/providers/store/counter.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst counter = createSlice({\n  name: \"counter\",\n  initialState: {\n    count: 0\n  },\n  reducers: {\n    increment(state, { payload }) {\n      state = state + 1;\n    },\n    decrement(state, { payload }) {\n      state = state - 1;\n    },\n    decrement(state, { payload }) {\n      state = 0;\n    },\n  },\n});\n\nexport const actions = counter.actions;\n\n// Thunk is a function that delays an action until later (after async call)\nexport const fetchUser = () => {\n  // function that is returned receives a dispatch function\n  return async (dispatch) => {\n    dispatch(userActions.setLoading(true));\n    const user = await fetch(`https://jsonplaceholder.typicode.com/users/${Math.floor(Math.random() * 9)}`);\n    const parsedUser = await user.json();\n    dispatch(userActions.setUser({ user: parsedUser }));\n    dispatch(userActions.setLoading(false));\n  };\n};\n\nexport default counter;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,OAAO,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,SADoB;EAE1BC,YAAY,EAAE;IACZC,KAAK,EAAE;EADK,CAFY;EAK1BC,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAD,EAAQ;MAAEC;IAAF,CAAR,EAAqB;MAC5BD,KAAK,GAAGA,KAAK,GAAG,CAAhB;IACD,CAHO;;IAIRE,SAAS,CAACF,KAAD,EAAQ;MAAEC;IAAF,CAAR,EAAqB;MAC5BD,KAAK,GAAGA,KAAK,GAAG,CAAhB;IACD,CANO;;IAORE,SAAS,CAACF,KAAD,EAAQ;MAAEC;IAAF,CAAR,EAAqB;MAC5BD,KAAK,GAAG,CAAR;IACD;;EATO;AALgB,CAAD,CAA3B;AAkBA,OAAO,MAAMG,OAAO,GAAGT,OAAO,CAACS,OAAxB,C,CAEP;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAC7B;EACA,OAAO,MAAOC,QAAP,IAAoB;IACzBA,QAAQ,CAACC,WAAW,CAACC,UAAZ,CAAuB,IAAvB,CAAD,CAAR;IACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,8CAA6CC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAA8B,EAA7E,CAAxB;IACA,MAAMC,UAAU,GAAG,MAAML,IAAI,CAACM,IAAL,EAAzB;IACAT,QAAQ,CAACC,WAAW,CAACS,OAAZ,CAAoB;MAAEP,IAAI,EAAEK;IAAR,CAApB,CAAD,CAAR;IACAR,QAAQ,CAACC,WAAW,CAACC,UAAZ,CAAuB,KAAvB,CAAD,CAAR;EACD,CAND;AAOD,CATM;AAWP,eAAeb,OAAf"},"metadata":{},"sourceType":"module"}